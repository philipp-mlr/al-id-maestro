package used

import (
	"github.com/philipp-mlr/al-id-maestro/component/layout"
	"github.com/philipp-mlr/al-id-maestro/model"
	"fmt"
)

templ Show(currPage map[string]bool) {
	@layout.Base(currPage, "AL ID Maestro - Used IDs") {
		<main class="px-20">
			<h1 class="my-20 text-4xl">Used IDs</h1>
			<div class="overflow-x-auto" hx-trigger="load" hx-get="/used?page=1" hx-target="#table-items">
				<table class="table overflow-auto table-sm md:table-md xl:table-lg table-zebra">
					<!-- head -->
					<thead>
						<tr>
							<th>ID</th>
							<th>Type</th>
							<th>Name</th>
							<th>App Name</th>
							<th>App Id</th>
							<th>Repository</th>
						</tr>
					</thead>
					<tbody id="table-items">
					</tbody>
				</table>
			</div>
		</main>	}
}

templ TableItem(found []model.Found, nextPage uint64) {
	for i, object := range found {
		if len(found) -1 != i {
			<tr>
				<td>{ fmt.Sprint(object.ID) }</td>
				<td>{ fmt.Sprint(object.ObjectType) }</td>
				<td>{ fmt.Sprint(object.Name) }</td>
				<td>{ fmt.Sprint(object.AppID) }</td>
				<td>{ fmt.Sprint(object.AppName) }</td>
				<td>{ fmt.Sprint(object.Repository) }</td>
				//<td>{ fmt.Sprint(object.FilePath) }</td>
			</tr>
		} else {
			<tr
				hx-get={ fmt.Sprint("/duplicates?page=", nextPage) }
				hx-trigger="revealed"
				hx-swap="afterend"
				hx-target="this"
			>
				<td>{ fmt.Sprint(object.ID) }</td>
				<td>{ fmt.Sprint(object.ObjectType) }</td>
				<td>{ fmt.Sprint(object.Name) }</td>
				<td>{ fmt.Sprint(object.AppID) }</td>
				<td>{ fmt.Sprint(object.AppName) }</td>
				<td>{ fmt.Sprint(object.Repository) }</td>
				//<td>{ fmt.Sprint(object.FilePath) }</td>
			</tr>
		}
	}
}